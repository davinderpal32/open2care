swagger: "2.0"
info:
  version: 1.0.0
  title: musicApp
  description: This is Music app for api
basePath: /api/v1
tags:
  - name: Users
    description: Users CRUD operations
  - name: Auth
    description: Authentication operations

consumes:
  - application/json
produces:
  - application/json


definitions:
  
  UsersBody:
    type: object
    title: users
    required:
      - email
      - firstName
      - lastName
    properties:
      email:
        type: string
        example: example@gmail.com
      firstName:
        type: string
        example: test
      lastName:
        type: string
        example: test
  AuthBody:
    type: object
    title: register
    required:
      - email
      - userName
      - firstName
      - lastName
      - phoneNumber
      - password
    properties:
      email:
        type: string
        example: example@gmail.com
      userName:
        type: string
        example: test
      firstName:
        type: string
        example: test
      lastName:
        type: string
        example: test
      phoneNumber:
        type: number
        example: 9876543210
      password:
        type: string
        example: Test123
  AuthLogin:
    type: object
    title: login
    required:
      - email
      - password
      - role
    properties:
      email:
        type: string
        example: example@gmail.com
      password:
        type: string
        example: Test123
      role:
        type: string
        enum: ["admin", "patient", "carecenter"]
  AuthReset:
    type: object
    title: forgetPassword
    required:
      - oldPassword
      - newPassword
    properties:
      oldPassword:
        type: string
        example: Test123
      newPassword:
        type: string
        example: Test12345

paths:
  

  /users:
    get:
      tags:
        - Users
      description: Fetch all users
      responses:
        200:
          description: Returns all users
    post:
      tags:
        - Users
      description: Create a new example
      parameters:
        - name: email
        - name: firstName
        - name: lastName
          schema:
            $ref: "#/definitions/UsersBody"
      responses:
        200:
          description: Returns all users

  /users/{id}:
    get:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to retrieve
          type: string
      responses:
        200:
          description: Return the user with the specified id
        404:
          description: User not found
    delete:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to delete
          type: string
      responses:
        200:
          description: Return the user with the specified id
        404:
          description: User not found

  /auth/careCenterRegister:
    post:
      tags:
        - Auth
      description: Create a new care center
      parameters:
        - name: params
          in: body
          schema:
            $ref: "#/definitions/AuthBody"
      responses:
        200:
          description: carecenter details with token
        404:
          description: Somthing went wrong
  /auth/login:
    post:
      tags:
        - Auth
      description: user login
      parameters:
        - name: params
          in: body
          schema:
            $ref: "#/definitions/AuthLogin"
      responses:
        200:
          description: Returns user
        404:
          description: Somthing went wrong
  /auth/forgetPassword/{email}:
    get:
      tags:
        - Auth
      parameters:
        - name: email
          in: path
          required: true
          type: string
      responses:
        200:
          description: send mail for reset password
        404:
          description: User not found
  /auth/resetPassword:
    put:
      tags:
        - Auth
      description: user password reset
      parameters:
        - name: params
          in: body
          schema:
            $ref: "#/definitions/AuthReset"
        - name: Authorization
          in: header
          description: an Authorization header
          required: true
          type: string
      responses:
        200:
          description: Returns user
        404:
          description: Somthing went wrong
        



