swagger: "2.0"
info:
  version: 1.0.0
  title: open2care
  description: Apis for open2care
basePath: /api/v1
tags:
  - name: Auth
    description: Authentication operations

consumes:
  - application/json
produces:
  - application/json


definitions:
  AuthBody:
    type: object
    title: register
    required:
      - email
      - userName
      - firstName
      - lastName
      - phoneNumber
      - password
      - serviceName
      - cost
      - approxTime
      - appointmentTime
      - centerName
      - centerType
      - centerPhoneNumber
      - address1
      - city
      - state
      - zipCode
      - businessDays
      - insuranceAccepted
    properties:
      email:
        type: string
        example: example@gmail.com
      userName:
        type: string
        example: test
      firstName:
        type: string
        example: test
      lastName:
        type: string
        example: test
      phoneNumber:
        type: number
        example: 9876543210
      password:
        type: string
        example: Test123
      serviceName:
        type: string
        example: Test
      cost:
        type: number
        example: 30
      approxTime:
        type: number
        example: 30
      appointmentTime:
        type: string
        example: Test
      centerName:
        type: string
        example: Test
      centerType:
        type: string
        enum: ['Urgent Care', 'Dentist', 'Primary Care']
      licenseNumber:
        type: string
        example: Test
      centerPhoneNumber:
        type: number
        example: 9876543210
      address1:
        type: string
        example: Test
      address2:
        type: string
        example: Test
      city:
        type: string
        example: Test
      state:
        type: string
        example: Test
      zipCode:
        type: number
        example: 100101
      businessDays:
        type: string
        example: Test
      insuranceAccepted:
        type: string
        example: Test
  AuthLogin:
    type: object
    title: login
    required:
      - email
      - password
      - role
    properties:
      email:
        type: string
        example: example@gmail.com
      password:
        type: string
        example: Test123
      role:
        type: string
        enum: ["carecenter", "patient", "admin" ]
  AuthReset:
    type: object
    title: forgetPassword
    required:
      - oldPassword
      - newPassword
    properties:
      oldPassword:
        type: string
        example: Test123
      newPassword:
        type: string
        example: Test12345
  Authforget:
    type: object
    title: forgetPassword
    required:
      - email
      - role
    properties:
      email:
        type: string
        example: example@gmail.com
      role:
        type: string
        enum: ["carecenter", "patient", "admin" ]

paths:

  /auth/careCenterRegister:
    post:
      tags:
        - Auth
      description: Create a new care center
      parameters:
        - name: params
          in: body
          schema:
            $ref: "#/definitions/AuthBody"
      responses:
        200:
          description: carecenter details with token
        404:
          description: Somthing went wrong
  /auth/login:
    post:
      tags:
        - Auth
      description: user login
      parameters:
        - name: params
          in: body
          schema:
            $ref: "#/definitions/AuthLogin"
      responses:
        200:
          description: Returns user
        404:
          description: Somthing went wrong
  /auth/forgetPassword:
    post:
      tags:
        - Auth
      parameters:
        - name: param
          in: body
          schema:
            $ref: "#/definitions/Authforget"
      responses:
        200:
          description: send mail for reset password
        404:
          description: User not found
  /auth/resetPassword:
    put:
      tags:
        - Auth
      description: user password reset
      parameters:
        - name: params
          in: body
          schema:
            $ref: "#/definitions/AuthReset"
        - name: Authorization
          in: header
          description: an Authorization header
          required: true
          type: string
      responses:
        200:
          description: Returns user
        404:
          description: Somthing went wrong
        



